services:
  app:
    build: ./app
    ports: ["8080:8080"]
    command:
      [
        "gunicorn","-w","2","-k","gthread","--threads","4",
        "--timeout","${GUNI_TIMEOUT:-2}","--graceful-timeout","${GUNI_GRTIMEOUT:-2}",
        "--bind","0.0.0.0:8080","main:app"
      ]
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:8080/healthz', timeout=1).status==200 else sys.exit(1)"]
      interval: 10s
      timeout: 3s
      start_period: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-lifecycle
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus-rules:/etc/prometheus/rules:ro
    ports:
      - "0.0.0.0:9090:9090/tcp"
    depends_on:
      - app
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9090/-/healthy >/dev/null || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 3
      start_period: 10s

  grafana:
    image: grafana/grafana
    ports:
      - "0.0.0.0:3000:3000/tcp"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=SuperPuperStrongPassword667-
      - GF_LOG_LEVEL=debug
    depends_on:
      - prometheus
      - app
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/api/health | grep -q '\"database\":\"ok\"'"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 20s
